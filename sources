

   DESCRIPTION:

Displayed UI with correct song/artist input
Fetch songs/artists and put in HTML DOM
Add next/previous pages
Add 'get lyrics' functionality and display in DOM


reason for making: fully comprehend vanilla javascript before
learning the libraries (react.js, angular.js)

api used:
 https://lyricsovh.docs.apiary.io/

 https://api.lyrics.ovh/v1/artist/title

 references for fetch API with vanilla JS
 https://gomakethings.com/how-to-use-the-fetch-api-with-vanilla-js/
*/

const form = document.getElementById('form');
const search = document.getElementById('search');
const result = document.getElementById('result');
const more  = document.getElementById('more');
//api URL saved as string
const apiURL = 'https://api.lyrics.ovh';

//functionality: search by song or artist name (lyrics are not searchable)
async function searchSongs(term) {
  const res = await fetch(`${apiURL}/suggest/${term}`);
  const data = await res.json();
  showData(data);
}

/* //testing fake data 
fetch('https://jsonplaceholder.typicode.com/todos/1')
  .then(response => response.json())
  .then(json => console.log(json))
*/

//show song/artist in dom
function showData(data) {
  result.innerHTML = `
    <ul class="songs">
      ${data.data
        .map(
          song => `<li>
      <span><strong>${song.artist.name}</strong> - ${song.title}</span>
      <button class="btn" data-artist="${song.artist.name}" data-songtitle="${song.title}">Get Lyrics</button>
    </li>`
        )
        .join('')}
    </ul>
  `;

  if (data.prev || data.next) {
    more.innerHTML = `
     ${
       data.prev ? `<button class = "btn" onclick = "getMoreSongs('${data.prev}')">Prev</button>`
       : ''
     }
      ${
        data.next ? `<button class = "btn" onclick = "getMoreSongs('${data.next}')">Next</button>`
      : ''
     }
     `;
   } else { 
     more.innerHTML = '';
   }
    
  } //end showData

//get prev and next songs
async function getMoreSongs(url) {
  const res = await fetch(`https://cors-anywhere.herokuapp.com/${url}`);
  const data = await res.json();
  showData(data);
}

//get lyrics from song
async function getLyrics (artist, songTitle) {
  const res = await fetch(`${apiURL}/v1/${artist}/${songTitle}`);
  const data = await res.json();

  if ( data.error ) {
    result.innerHTML = data.error;
  } else {
    // javascript replace line breaks with br 
    //https://www.codegrepper.com/code-examples/javascript/javascript+replace+line+breaks+with+br
    const lyrics = data.lyrics.replace(/(\r\n|\r|\n)/g, '<br>');
    result.innerHTML = `<h2><strong>${artist}</strong>-${songTitle}</h2>
                   <span>${lyrics}</span>`;
  }
  more.innerHTML = '';
}

//event listeneers
form.addEventListener('submit', e => {
  e.preventDefault();
  // trim() Remove whitespace from both sides of a string
  const searchTerm = search.value.trim();
  if (!searchTerm) {
    alert('Please type in a search term');
    } else {
      searchSongs(searchTerm);
  }
});

//get lyrics buttonclick
result.addEventListener('click', e => {
  // https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_element_tagname2
  const clickedEl = e.target;
  if (clickedEl.tagName ==='BUTTON') {
    const artist = clickedEl.getAttribute('data-artist');
    const songTitle = clickedEl.getAttribute('data-songtitle')
    getLyrics(artist, songTitle);
  }
});


















